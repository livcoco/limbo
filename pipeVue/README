The pypeVue program allows easy drawing of "posts and pipes" figures.
It interprets drawing-scripts for figures, and produces files of
OpenSCAD code representing the figures.

Figures to be drawn are made up of cylinders (pipes) connected between
locations in space (posts).  This paradigm is useful for drawing
diagrams of geodesic domes.

To use the program, you need to have python3 and OpenSCAD installed on
your system.  [An early version of pypeVue ("pipeVue0.py") also
required the `SolidPython` module, but this version does not.]

Obtain files pypeVue.py, pypeVue.codeBase.scad, and a script file for
the drawing you wish to make.  For script-file examples, see the files
in the pypeVue directory whose names start with "eg-".  For details
about how to write scripts, see the LibreOffice file pypeVue.dox.odt
or PDF file pypeVue.dox.pdf.

When you run the program to process a script, it will write SCAD code
to a file (by default, to pypeVue.scad). For example, you might say

     ./pypeVue.py  f=eg-pentagon-script

which will produce pypeVue.scad based on that script, and then you
might say

     openscad pypeVue.scad &

which will cause OpenSCAD to read pypeVue.scad and display the created
figure.

If OpenSCAD's `Design -> Automatic Reload and Preview` option is on,
then once you've started OpenSCAD as above, it will notice whenever
pypeVue.scad changes, and will re-render the image.  See other
comments (about running the program) at beginning of pypeVue.py.  For
example, using exec-on-change as obtained at
https://github.com/ghjwp7/plastics/blob/master/exec-on-change, you can
have pypeVue run automatically whenever you change a script file,
after which in its turn OpenSCAD will automatically update the
display.
